<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>陶渊明诗歌</title>
      <link href="/2023/03/12/life/hobby/taoyuanming/"/>
      <url>/2023/03/12/life/hobby/taoyuanming/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">与殷晋安别（魏晋·陶渊明）</span><br><span class="line">游好非少长，一遇尽殷勤。</span><br><span class="line">信宿酬清话，益复知为亲。</span><br><span class="line">去岁家南里，薄作少时邻。</span><br><span class="line">负杖肆游从，淹留忘宵晨。</span><br><span class="line">语默自殊势，亦知当乖分。</span><br><span class="line">未谓事已及，兴言在兹春。</span><br><span class="line">飘飘西来风，悠悠东去云。</span><br><span class="line">山川千里外，言笑难为因。</span><br><span class="line">良才不隐世，江湖多贱贫。</span><br><span class="line">脱有经过便，念来存故人。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
          <category> hobby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题收集</title>
      <link href="/2023/03/12/tips/hexo/hexothemes/"/>
      <url>/2023/03/12/tips/hexo/hexothemes/</url>
      
        <content type="html"><![CDATA[<h2 id="收集hexo的主题"><a href="#收集hexo的主题" class="headerlink" title="收集hexo的主题"></a>收集hexo的主题</h2><h4 id="博客主题推荐"><a href="#博客主题推荐" class="headerlink" title="博客主题推荐"></a>博客主题推荐</h4><p><a href="https://github.com/starryiu/aurora-article/issues/33">https://github.com/starryiu/aurora-article/issues/33</a></p><h4 id="1-butterfly"><a href="#1-butterfly" class="headerlink" title="1.butterfly"></a>1.butterfly</h4><p><a href="https://github.com/jerryc127/hexo-theme-butterfly">链接</a></p><p>例子：httpss:&#x2F;&#x2F;yangzi0210.github.io&#x2F;</p><h4 id="2-icarus"><a href="#2-icarus" class="headerlink" title="2.icarus"></a>2.icarus</h4><p><a href="https://github.com/ppoffice/hexo-theme-icarus">链接</a></p><p>例子：httpss:&#x2F;&#x2F;qimr.gitee.io&#x2F;</p><h4 id="3-argon"><a href="#3-argon" class="headerlink" title="3.argon"></a>3.argon</h4><p><a href="https://github.com/solstice23/argon-theme">链接</a></p><h4 id="4-handsome"><a href="#4-handsome" class="headerlink" title="4.handsome"></a>4.handsome</h4><p><a href="https://www.ihewro.com/archives/489/">链接</a></p><h4 id="5-theme-next-gemini"><a href="#5-theme-next-gemini" class="headerlink" title="5.theme-next gemini"></a>5.theme-next gemini</h4><p><a href="https://github.com/lewky/hexo-theme-beep">链接</a></p><p>例子：httpss:&#x2F;&#x2F;caiyantao.gitee.io&#x2F;</p><h4 id="6-hexo-theme-shoka"><a href="#6-hexo-theme-shoka" class="headerlink" title="6.hexo-theme-shoka"></a>6.hexo-theme-shoka</h4><p>[链接](<a href="https://github.com/amehime/hexo-theme-shoka">https://github.com/amehime/hexo-theme-shoka</a></p><p>例子：httpss:&#x2F;&#x2F;shoka.lostyu.me&#x2F;</p>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> tips </tag>
            
            <tag> 收集 </tag>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建网站遇到的坑</title>
      <link href="/2023/03/12/tips/hexo/hexoerr/"/>
      <url>/2023/03/12/tips/hexo/hexoerr/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo搭建网站遇到的坑✨"><a href="#hexo搭建网站遇到的坑✨" class="headerlink" title="hexo搭建网站遇到的坑✨"></a>hexo搭建网站遇到的坑✨</h2><h4 id="一-最后htxo-d-成功上传到了github，但还是打不开"><a href="#一-最后htxo-d-成功上传到了github，但还是打不开" class="headerlink" title="一.最后htxo d 成功上传到了github，但还是打不开"></a>一.最后htxo d 成功上传到了github，但还是打不开</h4><ol><li><p>等待一下，重新在新的标签页输入网址访问。</p></li><li><p>删掉本地项目，删掉远端的库。重新建一个<code>hexo init</code>，生成静态文件<code>hexo g</code>。</p><p>接着在github新建仓库，修改配置文件_config.yml，本地安装工具<code>npm install hexo-deployer-git --save</code>，清除<code>hexo clean</code>。最后重新访问。</p></li></ol><h4 id="二-hexo-d-无法上传到github。"><a href="#二-hexo-d-无法上传到github。" class="headerlink" title="二.hexo d 无法上传到github。"></a>二.hexo d 无法上传到github。</h4><ol><li><p>确保git成功安装。并且和github连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一个就是你的邮箱，第二个就是你的用户名</span></span><br><span class="line">git config --global user.email <span class="string">&quot;2816@qq.com&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;mosherk&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>spawn git ENOENT。或者‘git’不是内部或外部命令</p><p>可能是git环境变量引起,添加即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前面的xxx是你git的安装目录</span></span><br><span class="line">xxx\bin</span><br><span class="line">xxx\libexec\git-core</span><br><span class="line"><span class="comment"># 如果想在cmd或者vscode终端使用git，还得再添加一条环境变量</span></span><br><span class="line">xxx\Git\cmd</span><br></pre></td></tr></table></figure></li><li><p>出现：fatal: Not a git repository (or any of the parent directories): .git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删掉根目录下的  .deploy.git, 依次执行：</span></span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>可能是分支或者github不允许通过https和账号密码的形式上传</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在_config.yml中</span></span><br><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&#x27;git&#x27;</span></span><br><span class="line">repo: https://github.com/yourname/yourname.github.io.git</span><br><span class="line">branch: master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将repo和bransh修改为，repo部分可以直接去github复制ssh处链接</span></span><br><span class="line">repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">branch: main</span><br></pre></td></tr></table></figure><p>上面的方法是在配置了ssh的情况下才有效，配置ssh参考安安写的<a href="https://blog.csdn.net/qq_36667170/article/details/79094257">Git教程 SSH keys配置</a>，写的很棒～</p><p>如果不想配置ssh，则用官网提供的方法，用token。报错信息有链接，照着做应该没问题，我因为之前配料ssh，就没尝试这个方法。</p><p>好像是<a href="https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls">这个链接</a>，用token方式。</p></li></ol><br/><ol start="5"><li>查找时看到上传不了还有其他的一些方法，比如回滚，强制推送之类，不过没试过。还有读<a href="https://www.jianshu.com/p/67c57c70f275">取不到Git分支</a>，将git退回低版本即可。</li></ol><h4 id="三-在vodecode终端输入hexo的命令后，弹出”你要如何打开这个文件”"><a href="#三-在vodecode终端输入hexo的命令后，弹出”你要如何打开这个文件”" class="headerlink" title="三.在vodecode终端输入hexo的命令后，弹出”你要如何打开这个文件”"></a>三.在vodecode终端输入hexo的命令后，弹出”你要如何打开这个文件”</h4><p>不知道具体什么原因。就卸载了hexo-cli，删了hexo相关环境变量(如果有设置的话)重装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h4><p><a href="https://hexo.io/zh-cn/docs/troubleshooting.html">官网问题解答</a></p><p><a href="https://blog.csdn.net/yuzhiyun3536/article/details/53223048">github hexo搭建博客出现的错误记录</a></p><p><a href="https://blog.csdn.net/qq_49218475/article/details/117334256">SpawnFailed错误的几种解决方法</a></p>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debug </tag>
            
            <tag> hexo </tag>
            
            <tag> tips </tag>
            
            <tag> 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用hexo建静态博客全过程</title>
      <link href="/2023/03/12/tips/hexo/hexobuild/"/>
      <url>/2023/03/12/tips/hexo/hexobuild/</url>
      
        <content type="html"><![CDATA[<h2 id="用hexo建静态博客全过程"><a href="#用hexo建静态博客全过程" class="headerlink" title="用hexo建静态博客全过程"></a>用hexo建静态博客全过程</h2><h3 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h3><ol><li>环境：node.js。推荐安装12.0版本。安装和环境配置的教程网上很多，不写了😉<br>  <a href="https://nodejs.org/zh-cn/download/">官网下载</a></li><li>工具：git。用于上传代码到github。一般无脑next，教程很多，也不写了😬<br>  <a href="https://git.p2hp.com/">下载</a></li></ol><h3 id="二、本地创建项目"><a href="#二、本地创建项目" class="headerlink" title="二、本地创建项目."></a>二、本地创建项目.</h3><ol><li><p>安装hexo包：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span>  </span><br></pre></td></tr></table></figure></li><li><p>创建项目文件夹(Win)：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir xxx</span><br></pre></td></tr></table></figure></li><li><p>新建一个hexo</p></li></ol><p><code>hexo init</code></p><ol start="4"><li>创建文章：<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo new [<span class="type">layout</span>] \&lt;title&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#以下命令会创建一个 source/about/me.md 文件，</span></span><br><span class="line"><span class="comment">#同时 Front Matter 中的 title 为 &quot;About me&quot;。</span></span><br><span class="line"><span class="comment">#注意title是必需要的。</span></span><br><span class="line">hexo new page <span class="literal">--path</span> about/me <span class="string">&quot;About me&quot;</span></span><br></pre></td></tr></table></figure></li></ol><p>不设置layout，则使用配置文件中的default_layout</p><ol start="5"><li><p>构建项目</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></li><li><p>预览</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>下载主题，把它放到 &#x2F;themes 目录下</p></li><li><p>修改_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> </span><br></pre></td></tr></table></figure></li><li><p>重新生成</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ol><h3 id="二、部署到github"><a href="#二、部署到github" class="headerlink" title="二、部署到github"></a>二、部署到github</h3><ol><li><p>安装插件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-deployer-git</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure></li><li><p>在github上创建仓库<code>xxx.github.io</code>,xxx就是你github的用户名</p></li><li><p>修改_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 其中xxx就是你github的用户名，branch推荐用main</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:xxx/xxx.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>线上访问</p></li></ol><p><code>xxx.github.io</code></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.bilibili.com/video/BV1Yb411a7ty/?spm_id_from=333.337.search-card.all.click&vd_source=b17120e43489c29aaaccb049e11aef82">手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo</a></li><li><a href="https://hexo.io/zh-cn/docs">hexo官网</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> tips </tag>
            
            <tag> 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm install报错：Unexpected token $ in JSON at</title>
      <link href="/2023/01/18/html5/solve/npm%20install%E6%8A%A5%E9%94%99/"/>
      <url>/2023/01/18/html5/solve/npm%20install%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h3 id="报错描述"><a href="#报错描述" class="headerlink" title="报错描述"></a>报错描述</h3><p>npm install 的时候出现</p><blockquote><p>Unexpected token $ in JSON at position …… </p></blockquote><p>截图如下：<br><img src="https://img-blog.csdnimg.cn/842776c5bc7a41938f7f8a12d5605a5a.png" alt="npm报错"></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><ol><li><p>搜了几篇文章，大都是强制清除缓存或者修改registry。关于这个比较全面的解决方法如下：<br><a href="https://blog.csdn.net/qq_53168633/article/details/117399067">关于处理npm ERR! Unexpected token in JSON at position…</a></p></li><li><p>但我是新配置的环境，应该不是这个问题。后来找到解决方法，<strong>删掉根目录下的package-lock.json</strong>即可</p></li></ol><p>参考：<a href="https://github.com/npm/npm/issues/17340">Install error: Unexpected token &lt; in JSON at position 35 #17340</a></p>]]></content>
      
      
      <categories>
          
          <category> html5 </category>
          
          <category> solve </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> debug </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript：数组的各类属性和方法</title>
      <link href="/2021/12/28/html5/js/js%E6%95%B0%E7%BB%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95/"/>
      <url>/2021/12/28/html5/js/js%E6%95%B0%E7%BB%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>总结数组的一些属性和方法。分为表格索引和方法详解。</p><h2 id="表格索引-——-gt-gt-点这里直达方法详解"><a href="#表格索引-——-gt-gt-点这里直达方法详解" class="headerlink" title="表格索引 ——&gt;&gt;点这里直达方法详解"></a>表格索引 ——&gt;&gt;<a href="">点这里直达方法详解</a></h2><table><thead><tr><th>属性&#x2F;方法</th><th>描述</th></tr></thead><tbody><tr><td><a href="#constructor">constructor</a></td><td>返回创建数组对象的原型函数。</td></tr><tr><td><a href="#length">length</a></td><td>设置或返回数组元素的个数</td></tr><tr><td><a href="#prototype">prototype</a></td><td>允许你向数组对象添加属性或方法</td></tr><tr><td><a href="#concat">concat()</a></td><td>连接两个或更多的数组，并返回结果</td></tr><tr><td><a href="#copyWithin">copyWithin()</a></td><td>从数组指定位置拷贝元素到的另一个指定位置中。</td></tr><tr><td><a href="#entries">entries()</a></td><td>返回数组的可迭代对象</td></tr><tr><td><a href="#every">every()</a></td><td>检测数值元素的每个元素是否符合条件</td></tr><tr><td><a href="#fill">fill()</a></td><td>使用一个固定值来填充数组</td></tr><tr><td><a href="#find">find()</a></td><td>返回符合传入测试(函数)条件的数组元素</td></tr><tr><td><a href="#findIndex">findIndex()</a></td><td>返回符合传入测试(函数)条件的数组元素索引</td></tr><tr><td><a href="#forEach">forEach()</a></td><td>数组每个元素都执行一次回调函数</td></tr><tr><td><a href="#from">from()</a></td><td>通过给定的对象中创建一个数组</td></tr><tr><td><a href="#includes">includes()</a></td><td>判断一个数组是否包含特定的值</td></tr><tr><td><a href="#indexOf">indexOf()</a></td><td>搜索数组中元素，并返回它所在的位置</td></tr><tr><td><a href="#isArray">isArray()</a></td><td>判断对象是否为数组</td></tr><tr><td><a href="#join">join()</a></td><td>把数组的所有元素放入一个字符串</td></tr><tr><td><a href="#keys">keys()</a></td><td>返回数组的可迭代对象，包括原始数组的键(key)</td></tr><tr><td><a href="#lastIndexOf">lastIndexOf</a></td><td>搜索数组中的元素，并返回它最后出现的位置</td></tr><tr><td><a href="#map">map()</a></td><td>通过指定函数处理数组的每个元素，并返回处理后的数组</td></tr><tr><td><a href="#pop">pop()</a></td><td>删除数组的最后一个元素并返回删除的元素</td></tr><tr><td><a href="#push">push()</a></td><td>向数组的末尾添加一个或更多元素，并返回新的长度</td></tr><tr><td><a href="#reduce">reduce()</a></td><td>将数组元素计算为一个值(从左到右)</td></tr><tr><td><a href="#reverse">reverse()</a></td><td>反转数组的元素顺序</td></tr><tr><td><a href="#shift">shift()</a></td><td>删除并返回数组的第一个元素</td></tr><tr><td><a href="#slice">slice()</a></td><td>选取数组的一部分，并返回一个新的数组</td></tr><tr><td><a href="#some">some()</a></td><td>检测数组元素中是否有元素符合指定条件</td></tr><tr><td><a href="#sort">sort()</a></td><td>对数组元素进行排序</td></tr><tr><td><a href="#splice">splice()</a></td><td>从数组中添加或删除元素</td></tr><tr><td><a href="#toString">toString()</a></td><td>把数组转换为字符串，并返回结果</td></tr><tr><td><a href="#unshift">unshift()</a></td><td>将数组的开头添加一个或更多元素，并返回新的长度</td></tr><tr><td><a href="#valueOf">valueOf()</a></td><td>返回数组对象的原始值</td></tr><tr><td><a href="#"></a></td><td></td></tr><tr><td><a href="#"></a></td><td></td></tr></tbody></table><h2 id="属性-x2F-方法详解"><a href="#属性-x2F-方法详解" class="headerlink" title="属性&#x2F;方法详解"></a>属性&#x2F;方法详解</h2><h3 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h3><p><strong><a href="#">length</a></strong> : 设置或返回数组元素的个数<br><span id="length"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="property">length</span>)</span><br><span class="line">arr.<span class="property">length</span> = <span class="number">3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p>4<br>[1,2,3]</p></blockquote><p><strong><a href="#">constructor</a></strong> : 返回创建数组对象的原型函数<br><span id="constructor"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array.<span class="property">constructor</span>)</span><br></pre></td></tr></table></figure><blockquote><p> ƒ Array() { [native code] }</p></blockquote><p><strong><a href="#">prototype</a></strong> : 允许你向数组对象添加属性或方法<br><span id="prototype"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构建了一个方法</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">add</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        res = res + <span class="variable language_">this</span>[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">add</span>())</span><br></pre></td></tr></table></figure><blockquote><p> 10</p></blockquote><h3 id="方法–-gt-改变原数组"><a href="#方法–-gt-改变原数组" class="headerlink" title="方法–&gt;改变原数组"></a>方法–&gt;改变原数组</h3><p><strong><a href="#">push()</a></strong> : 向数组的末尾添加一个或更多元素，并返回新的长度<br><span id="push"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">push</span>(<span class="number">5</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p> 5<br> [1,2,3,4,5]</p></blockquote><p><strong><a href="#">pop()</a></strong> : 删除数组的最后一个元素并返回删除的元素<br><span id="pop"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">pop</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p>d<br>[“a”,”b”,”c”]</p></blockquote><p><strong><a href="#">unshift()</a></strong> : 向数组的开头添加一个或更多元素，并返回新的长度<br><span id="unshift"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">unshift</span>(<span class="string">&quot;one&quot;</span>,<span class="string">&quot;two&quot;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p>7<br>[“one”,”two”,1, 2, 3, 4, 5] </p></blockquote><p><strong><a href="#">shift()</a></strong> : 删除并返回数组的第一个元素<br><span id="shift"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&quot;one&quot;</span>,<span class="string">&quot;two&quot;</span>,<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>] </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">shift</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p>one<br>[“two”,1, 2, 3, 4, 5] </p></blockquote><p>&lt;!-排序&gt;<br><strong><a href="#">sort()</a></strong> : 对数组元素进行排序,默认升序<br><span id="sort"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">sort</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p>[1, 2, 3, 4]<br>[1, 2, 3, 4]</p></blockquote><p><strong><a href="#">splice()</a></strong> : 从数组中添加或删除元素<br><span id="splice"></span><br>语法：array.splice(index,[num],[item1,item2…])<br>index：必需。代表添加&#x2F;删除元素的位置，允许负数代表从末尾开始。<br>[num]：方括号代表可选。代表要删除的元素数量。0则低矮表不删除<br>[item1,item2…]：方括号代表可选。向数组添加的元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除元素</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">splice</span>(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="comment">//从倒数第一开始删2个元素，</span></span><br><span class="line"><span class="comment">//但倒数第一开始只有一个元素，所以只删了8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">splice</span>(-<span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p>[2, 3, 4]<br>[1, 5, 6, 7, 8]<br>[8]<br>[1, 5, 6, 7]  </p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除并添加</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">splice</span>(<span class="number">0</span>,<span class="number">2</span>,<span class="string">&quot;元素&quot;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="keyword">let</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array.<span class="title function_">splice</span>(-<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;元素1&#x27;</span>,<span class="string">&#x27;元素2&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array)</span><br></pre></td></tr></table></figure><blockquote><p>[1,2]<br>[‘元素’,3,4,5,6,7,8]<br>[6,7]<br>[1,2,3,4,5,’添加1’,’添加2’]</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只添加不删除</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">splice</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;two&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="keyword">let</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array.<span class="title function_">splice</span>(-<span class="number">1</span>,<span class="number">0</span>,<span class="string">&quot;one&quot;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array)</span><br></pre></td></tr></table></figure><blockquote><p>[] &#x2F;&#x2F;因为没删除所以返回结果为空<br>[1, ‘one’,’two’, 2, 3, 4, 5, 6, 7, 8]<br>[]<br>[1, 2, 3, 4, 5, 6, ‘one’, 7]</p></blockquote><p><strong><a href="#">sort()</a></strong> : 对数组内的元素进行排序<br><span id="sort"></span><br>return的值小于0时，不互换位置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">9</span>, <span class="number">23</span>, <span class="number">58</span>, <span class="number">666</span>, <span class="number">154</span>, <span class="number">233</span>]</span><br><span class="line"><span class="comment">//仅仅是arr.sort()是无法按大小正确排序的</span></span><br><span class="line">arr.<span class="title function_">sort</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">9</span>, <span class="number">23</span>, <span class="number">58</span>, <span class="number">666</span>, <span class="number">154</span>, <span class="number">233</span>]</span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123; <span class="keyword">return</span> a - b &#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">9</span>, <span class="number">23</span>, <span class="number">58</span>, <span class="number">666</span>, <span class="number">154</span>, <span class="number">233</span>]</span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a, b</span>) &#123; <span class="keyword">return</span> b - a &#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p>[1, 154, 23, 233, 58, 666, 9]<br>[1, 9, 23, 58, 154, 233, 666]<br>[666, 233, 154, 58, 23, 9, 1]  </p></blockquote><p><strong><a href="#">reverse()</a></strong> : 颠倒数组内元素的顺序。<br><span id="reverse"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">7</span>]</span><br><span class="line">arr.<span class="title function_">reverse</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure><blockquote><p>[7,2,6,5]</p></blockquote><p><strong><a href="#">copyWithin()</a></strong> :<br><span id="copyWithin"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><p><strong><a href="#">()</a></strong> :<br><span id=""></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><p><strong><a href="#">()</a></strong> :<br><span id=""></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><p><strong><a href="#">()</a></strong> :<br><span id=""></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><h3 id="方法–-gt-不改变数组"><a href="#方法–-gt-不改变数组" class="headerlink" title="方法–&gt;不改变数组"></a>方法–&gt;不改变数组</h3><p><strong><a href="#">join()</a></strong> : 把数组的所有元素放入一个字符串，可以自定义拼接符号<br><span id="join"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="keyword">let</span> str = arr.<span class="title function_">join</span>()</span><br><span class="line"><span class="keyword">let</span> str2 = arr.<span class="title function_">join</span>(<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str2)</span><br></pre></td></tr></table></figure><blockquote><p> [1, 2, 3, 4]<br>‘1,2,3,4’<br>‘1+2+3+4’  </p></blockquote><p><strong><a href="#">toString()</a></strong> : 将数组转化为字符串，不能像join那样自定义字符串<br><span id="toString"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;jack&#x27;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">toString</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p>hello,jack<br>[‘hello’,’jack’]</p></blockquote><p><strong><a href="#">toLocaleString()</a></strong> : 数组转字符串<br><span id="toLocaleString"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">toLocaleString</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p> 1,2,3,4<br> [1,2,3,4]</p></blockquote><p><strong><a href="#">concat()</a></strong> : 合并两个或多个数组，返回一个新的数组<br><span id="concat"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"><span class="keyword">let</span> arr3 = [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]</span><br><span class="line"><span class="comment">//拼接一个或多个数组</span></span><br><span class="line"><span class="keyword">let</span> array123 = arr1.<span class="title function_">concat</span>(arr2, arr3)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array123)</span><br><span class="line"><span class="keyword">let</span> array = arr1.<span class="title function_">concat</span>(<span class="string">&#x27;前&#x27;</span>, arr2, arr3, <span class="string">&#x27;后&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array)</span><br><span class="line"><span class="comment">//也可以用作字符串拼接数组，同样返回数组</span></span><br><span class="line"><span class="keyword">let</span> array2 = <span class="string">&#x27;数字有：&#x27;</span>.<span class="title function_">concat</span>(arr1)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array2)</span><br></pre></td></tr></table></figure><blockquote><p>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]<br>[1, 2, 3, 4, ‘前’, 5, 6, 7, 8, 9, 10, 11, 12, ‘后’]</p></blockquote><h4 id="查找："><a href="#查找：" class="headerlink" title="查找："></a>查找：</h4><p><strong><a href="#">indexOf()</a></strong> : 搜索数组中元素，并返回它所在的位置,找不到则返回-1<br><span id="indexOf"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&quot;一&quot;</span>,<span class="string">&quot;二&quot;</span>,<span class="string">&quot;三&quot;</span>,<span class="string">&quot;四&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="title class_">NaN</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">indexOf</span>(<span class="string">&quot;二&quot;</span>))</span><br><span class="line"><span class="comment">//接受第二参数，表示从这开始查找</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">indexOf</span>(<span class="string">&quot;二&quot;</span>,<span class="number">3</span>))</span><br><span class="line"><span class="comment">//严格相等才行</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;寻找2:&quot;</span>+arr.<span class="title function_">indexOf</span>(<span class="number">2</span>))</span><br><span class="line"><span class="comment">//查不到NaN</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;查NaN:&quot;</span>+arr.<span class="title function_">indexOf</span>(<span class="title class_">NaN</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure><blockquote><p> 1<br> -1<br> 寻找2:-1<br> 查NaN:-1<br> [“一”,”二”,”三”,”四”,”五”]</p></blockquote><p><strong><a href="#">lastIndexOf()</a></strong> : 搜索数组中的元素，并返回它最后出现的位置<br><span id="lastIndexOf"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&quot;一&quot;</span>, <span class="string">&quot;二&quot;</span>, <span class="string">&quot;三&quot;</span>, <span class="string">&quot;四&quot;</span>, <span class="string">&quot;三&quot;</span>, <span class="string">&quot;四&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="title class_">NaN</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;三&quot;</span>)) <span class="comment">//4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;三&quot;</span>, <span class="number">3</span>)) <span class="comment">//2</span></span><br><span class="line"><span class="comment">//负数代表从倒数第5个开始往前查找</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;三&quot;</span>, -<span class="number">5</span>)) <span class="comment">//4</span></span><br><span class="line"><span class="comment">//NaN同样找不到。当然也要严格相等</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">lastIndexOf</span>(<span class="title class_">NaN</span>))</span><br></pre></td></tr></table></figure><p><strong><a href="#">includes()</a></strong> : 判断一个数组是否包含特定的值(弥补了indexOf的不足)<br>它能够识别NaN,而且返回值为true或者false。其余和indexOf相同<br><span id="includes"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&quot;一&quot;</span>,<span class="string">&quot;二&quot;</span>,<span class="string">&quot;三&quot;</span>,<span class="string">&quot;四&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="title class_">NaN</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">includes</span>(<span class="string">&quot;二&quot;</span>))  <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">includes</span>(<span class="title class_">NaN</span>))  <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">includes</span>(<span class="number">2</span>))   <span class="comment">//false</span></span><br></pre></td></tr></table></figure><p><strong><a href="#">()</a></strong> :<br><span id=""></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><p><strong><a href="#">()</a></strong> :<br><span id=""></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><p><strong><a href="#">()</a></strong> :<br><span id=""></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><h3 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h3><p><strong><a href="#">of()</a></strong> : 返回<br><span id="of"></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><p><strong><a href="#">()</a></strong> :<br><span id=""></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote><p><strong><a href="#">()</a></strong> :<br><span id=""></span></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> html5 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>举例说明this的四种绑定规则和遇到箭头函数时的情况</title>
      <link href="/2021/12/10/html5/js/js-this/"/>
      <url>/2021/12/10/html5/js/js-this/</url>
      
        <content type="html"><![CDATA[<h2 id="默认绑定"><a href="#默认绑定" class="headerlink" title="默认绑定"></a>默认绑定</h2><p>1.一种无法应用其他规则的默认形式，函数直接调用，this将指向全局对象(window)。<br>2.但要注意，严格模式下，this会绑定到undefined,然而函数在严格模式下调用函数却不会影响默认绑定。</p><ol><li>栗子：小明的朋友请了很多人吃酒席，酒席摆满了两层楼，也请了小明。酒席的每桌饭搭配都不同，每个人只能选一桌吃。但小明是个贪吃鬼，对着面前的饭菜说：“我想吃这桌，我想吃这桌……”但因为还没入席吃饭，这里的所有饭菜都没进入谁的肚子，所以他无论指哪桌饭菜，都还是主人的。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">board1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">say</span>); <span class="comment">//window</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">board2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> board3 = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">say</span>); <span class="comment">//window</span></span><br><span class="line">        <span class="title function_">board1</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">say</span>); <span class="comment">//window</span></span><br><span class="line">    <span class="title function_">board3</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> say = <span class="string">&quot;我要吃这个&quot;</span></span><br><span class="line"><span class="title function_">board2</span>()</span><br></pre></td></tr></table></figure><blockquote><p>我要吃这个<br>我要吃这个<br>我要吃这个  </p></blockquote></li><li>栗子：这时候小明的老婆觉得有点丢人，就对他说：“在这丢什么人呢，这些你都不准吃”。没想到小明脸皮挺厚，那我到楼上吃。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">board1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&quot;use strict&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span> === <span class="literal">undefined</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;一楼不能吃&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">board2</span>()</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">board2</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span> === <span class="variable language_">window</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我去吃二楼&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">board1</span>()</span><br></pre></td></tr></table></figure><blockquote><p>一楼不能吃<br>我去吃二楼</p></blockquote></li></ol><h2 id="隐式绑定"><a href="#隐式绑定" class="headerlink" title="隐式绑定"></a>隐式绑定</h2><p>1.函数引用的时候有上下文对象，就运用了隐式绑定的规则，this会绑定到这个上下文对象。<br>2.隐式绑定有些情况会丢失绑定，变成默认绑定。其中一种情况是对象内的方法赋给对象外的变量，这时候的this又回到了全局范围；另一种典型的情况是回调函数</p><ol><li><p>栗子：终于开席可以吃东西了，小明找了小孩那桌坐下来吃。他现在可以真正吃到东西了。现在他吃到的菜属于粤菜。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> board = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;粤菜&#x27;</span>,</span><br><span class="line">    <span class="attr">foods</span>:<span class="string">&#x27;烤乳猪、白切鸡、老火靓汤、白灼虾&#x27;</span>,</span><br><span class="line">    <span class="attr">eat</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我吃的是&quot;</span> + <span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我吃了&#x27;</span> + <span class="variable language_">this</span>.<span class="property">foods</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">board.<span class="title function_">eat</span>();</span><br></pre></td></tr></table></figure><blockquote><p>我吃的是粤菜<br>我吃了烤乳猪、白切鸡、老火靓汤、白灼虾</p></blockquote></li><li><p>栗子：但我们知道小明是贪吃鬼，虽然吃着这一桌，但又想着那一桌，他盯上了川菜那一桌。当然想归想，他还是吃不到的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> board1 = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;粤菜&#x27;</span>,</span><br><span class="line">    <span class="attr">foods</span>:<span class="string">&#x27;烤乳猪、白切鸡、老火靓汤、白灼虾&#x27;</span>,</span><br><span class="line">    <span class="attr">eat</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我吃的是&quot;</span> + <span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我吃了&#x27;</span> + <span class="variable language_">this</span>.<span class="property">foods</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">want</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">board1.<span class="title function_">eat</span>();</span><br><span class="line"><span class="keyword">var</span> board2 = board1.<span class="property">want</span>;</span><br><span class="line"><span class="title function_">board2</span>()</span><br></pre></td></tr></table></figure><blockquote><p>我吃的是粤菜<br>我吃了烤乳猪、白切鸡、老火靓汤、白灼虾<br>Window{…}</p></blockquote></li></ol><h2 id="显示绑定（硬绑定）"><a href="#显示绑定（硬绑定）" class="headerlink" title="显示绑定（硬绑定）"></a>显示绑定（硬绑定）</h2><p>1.我们可以通过apply、call、bind将函数中的this强制绑定到指定的对象上。这样我们就可以期望他绑定到哪儿就绑定到哪儿。</p><ol><li>栗子：然而小明还是忍不住了，迅速在粤菜席吃了一些，就假装刚刚还没吃过，跑去川菜那桌。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> board1 = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;粤菜&#x27;</span>,</span><br><span class="line">    <span class="attr">eat</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我吃的是&quot;</span> + <span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> board2 = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;川菜&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">board1.<span class="property">eat</span>.<span class="title function_">call</span>(board2)</span><br><span class="line">board1.<span class="property">eat</span>.<span class="title function_">apply</span>(board2)</span><br></pre></td></tr></table></figure><blockquote><p>我吃的是川菜<br>我吃的是川菜</p></blockquote></li></ol><h2 id="构造函数绑定"><a href="#构造函数绑定" class="headerlink" title="构造函数绑定"></a>构造函数绑定</h2><p>1.构造函数<br>在JavaScript中其实并不存在所谓的“构造函数”，构造函数只是使用new操作符时被调用的普通函数，它们并不属于某个类，也不会实例化一个类；对这种函数实际上是“构造调用”。<br>使用new来调用函数，或者说发生构造函数调用时，会自动执行下面的操作。</p><ul><li>创建(或者说构造)一个全新的对象</li><li>此对象会被执行[[Prototype]]连接。</li><li>这个新对象会绑定到函数调用的this</li><li>如果函数没有返回其他对象，那么new表达式中的函数会自动返回这个新对象。</li></ul><ol><li>栗子：小明跑过去的时候发现川菜席已经没位置了，只好又回去粤菜席。其他地方没位置了，这下他不会受到诱惑跑到其他席去了。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">board</span>(<span class="params">name</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span>=name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">eat</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我吃的是&quot;</span> + <span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;川菜&quot;</span></span><br><span class="line"><span class="keyword">var</span> xiaoming = <span class="keyword">new</span> <span class="title function_">board</span>(<span class="string">&#x27;粤菜&#x27;</span>)</span><br><span class="line">xiaoming.<span class="title function_">eat</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>我吃的是粤菜</p></blockquote></li></ol><h2 id="遇到箭头函数时的情况"><a href="#遇到箭头函数时的情况" class="headerlink" title="遇到箭头函数时的情况"></a>遇到箭头函数时的情况</h2><p>不想写了（＃￣～￣＃）<br>其实是这个还不太熟悉╮(╯▽╰)╭<br>隐式绑定也还有一点没写完，以后再补</p><hr>参考:   <p><a href="https://muyiy.cn/blog/3/3.1.html#_1-%E8%B0%83%E7%94%A8%E4%BD%8D%E7%BD%AE">JavaScript深入之史上最全–5种this绑定全面解析</a></p>]]></content>
      
      
      <categories>
          
          <category> html5 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> js </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm时遇到npm ERR! A complete log of this run can be found in</title>
      <link href="/2021/08/14/html5/solve/npm%20ERR!-01/"/>
      <url>/2021/08/14/html5/solve/npm%20ERR!-01/</url>
      
        <content type="html"><![CDATA[<h2 id="npm时遇到npm-ERR-A-complete-log-of-this-run-can-be-found-in"><a href="#npm时遇到npm-ERR-A-complete-log-of-this-run-can-be-found-in" class="headerlink" title="npm时遇到npm ERR! A complete log of this run can be found in:"></a>npm时遇到npm ERR! A complete log of this run can be found in:</h2><p>npm安装node-sass时遇到了npm ERR! A complete log of this run can be found in:<br>在网上查了几个解决方法，感觉有的不能解决，有的试了也确实不能解决，再网上查看报错内容，发现：<br><img src="https://img-blog.csdnimg.cn/39ef8b8a63e14471839652173eaa7a07.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>感觉是和node的版本不对应的问题，因为我开始时想装@4.13.1版本的node-sass，而我的node是18，然后就去掉了指定版本，直接安装：</p><blockquote><p>npm install node-sass –save-dev</p></blockquote><p>最后看到：<br><img src="https://img-blog.csdnimg.cn/9ca08075dfb84570af6c757f68adbfc6.png" alt="在这里插入图片描述"><br>嗯，对应的6.0版本。</p>]]></content>
      
      
      <categories>
          
          <category> html5 </category>
          
          <category> solve </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> debug </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用VMware在U盘中安装Linux(centos7）超详细完整版</title>
      <link href="/2021/01/16/tips/linux/%E7%94%A8VMware%E5%9C%A8U%E7%9B%98%E5%AE%89%E8%A3%85centos7/"/>
      <url>/2021/01/16/tips/linux/%E7%94%A8VMware%E5%9C%A8U%E7%9B%98%E5%AE%89%E8%A3%85centos7/</url>
      
        <content type="html"><![CDATA[<h2 id="利用VMware在U盘中安装Linux-centos7）超详细完整版"><a href="#利用VMware在U盘中安装Linux-centos7）超详细完整版" class="headerlink" title="利用VMware在U盘中安装Linux(centos7）超详细完整版"></a>利用VMware在U盘中安装Linux(centos7）超详细完整版</h2><p>这篇安装流程是百度了多篇流程并结合自己的经验合写而成，干货满满，多图预警~</p><h3 id="一、下载Linux-centos7"><a href="#一、下载Linux-centos7" class="headerlink" title="一、下载Linux(centos7)"></a>一、下载Linux(centos7)</h3><p>安装的版本是CentOS-7-x86_64-Everything-2009，可以在清华的<br>镜像站下载：<a href="https://mirrors.tuna.tsinghua.edu.cn/centos/7.9.2009/isos/x86_64/">https://mirrors.tuna.tsinghua.edu.cn/centos/7.9.2009/isos/x86_64&#x2F;</a></p><h3 id="二、VMware准备"><a href="#二、VMware准备" class="headerlink" title="二、VMware准备"></a>二、VMware准备</h3><p>先把服务打开，不知道在哪打开的直接搜索。然后都打开吧，反正也没几个。<br><img src="https://img-blog.csdnimg.cn/20210113203825873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70#pic_center" alt="VMware服务"></p><h3 id="三、新建虚拟机"><a href="#三、新建虚拟机" class="headerlink" title="三、新建虚拟机"></a>三、新建虚拟机</h3><p>1.在VMware中点击文件—新建虚拟机。<br>选典型配置<br><img src="https://img-blog.csdnimg.cn/20210113205842585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2.直接安装程序光盘映像文件，检测到centos7。(当然你也可以选稍后安装，根据自己的需要配置就好)<br><img src="https://img-blog.csdnimg.cn/20210113210418162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>3.虚拟机名称自行取，位置也由你自行决定。<br><img src="https://img-blog.csdnimg.cn/20210113211038464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.点击自定义硬件。<br><img src="https://img-blog.csdnimg.cn/20210113211526321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5.USB控制器，改为USB3.0<br><img src="https://img-blog.csdnimg.cn/20210113212150635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>6.删掉硬盘(SCSI)，确定，然后开机。<br><em>（我当时没有看到硬盘，然后开机再关机，就能看到硬盘自动显示出来了，然后再删掉。如果你也遇到这种情况，我建议你也开机关机再把硬盘删掉，否则可能在后面选磁斜体样式盘的时候有麻烦）</em><br><img src="https://img-blog.csdnimg.cn/20210113211758359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>到这里算是完成了第一阶段，之后的安装步骤如果安装不成功，可以格式化U盘后，直接从这一步开始做。</p><h3 id="四、安装（一）"><a href="#四、安装（一）" class="headerlink" title="四、安装（一）"></a>四、安装（一）</h3><p>1.开机后就会显示这个页面<br><img src="https://img-blog.csdnimg.cn/20210114012240580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">   </p><p>2.在秒数倒数完之前(当然你也可以按上下键让它取消读秒)，在VMware的右下角这里连接U盘。<br><img src="https://img-blog.csdnimg.cn/20210114011649895.png" alt="在这里插入图片描述"><br>3.然后选择第二个Test this media &amp; install CentOS7，接着按<strong>tab键</strong>，把下面那行白色字修改为 </p><blockquote><p>vmlinuz initrd&#x3D;initrd.img linux dd quiet</p></blockquote><p>最后回车。这是为了寻找并配置索所要安装的U盘。<br><img src="https://img-blog.csdnimg.cn/20210113213632642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="安装之一"><br>4.等待了一会儿之后，就会进入这样的页面。然后就能看到显然这个就是我的U盘了。<br><img src="https://img-blog.csdnimg.cn/20210114150636820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5.记住这个名字，我的是sr0，你自己要根据自己的情况记下来。<br>然后关机，开机，连接U盘，按tab键(这里和上面的步骤一样)。<br>按tab键后就将下面白色那行字修改为：</p><blockquote><p>vmlinuz initrd&#x3D;initrd.img inst.stage2&#x3D;hd:&#x2F;dev&#x2F;<strong>sr0</strong> quiet</p></blockquote><p>注意加粗部分，是你刚刚记下的，而我的是sr0。<br>改完后，<br><img src="https://img-blog.csdnimg.cn/20210114151817174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="U盘是sr0"></p><h3 id="五、安装（二）"><a href="#五、安装（二）" class="headerlink" title="五、安装（二）"></a>五、安装（二）</h3><p>1.经过上面的步骤，配置基本完成了。接下来是系统的设置和正式安装。第一步是设置语言。可以在下面的框中输入ch搜索，选择中文。<br><img src="https://img-blog.csdnimg.cn/20210114163416882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="语言"><br>2.时区看一下时间对不对，不对改一下就好。<br>软件选择。先设置这个，因为如果安装的软件比较多的话，系统检查软件依赖关系就有点慢，这时候我们可以配置其他选项。<br>选GUI，可以全部选安装，也可以根据你自己的需要来选。<br><img src="https://img-blog.csdnimg.cn/20210114185036532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.接下来安装位置，这里要注意一下。点进去以后，发现空间不够，尽管我的U盘是空的。但没关系，我们可以先选自动分配，在点击完成。<br><img src="https://img-blog.csdnimg.cn/20210115224914319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="U盘空间不够"><br>4.点击完成后就会弹出这样的提示框。点击回收空间<br><img src="https://img-blog.csdnimg.cn/20210115225021368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="回收空间"><br>5.接着选中U盘——全部删除——回收空间。<br><img src="https://img-blog.csdnimg.cn/20210115225756972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>6.这时候就会返回前面安装信息摘要的页面，再次点击安装位置进去，这次选<strong>我要分配分区</strong>，点完成。<br>（当然你依然选自动分配分区也无妨，跳过接下来的几步就好）<br>首先要添加的挂载是swap，大小为物理内存大小的2倍。(可以点“点这里自动创建他们”，查看swap的推荐大小)<br><img src="https://img-blog.csdnimg.cn/20210115231151753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>7.接着是挂载&#x2F;，可以把剩余的内存分配掉。<br>主要是挂载swap和&#x2F;，其余的自便。<br>也可以点“点击这里自动创建”，在进行内存分配。<br><img src="https://img-blog.csdnimg.cn/20210115234546848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>8.完成——接受更改<br><img src="https://img-blog.csdnimg.cn/2021011523461837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>9.至于网络你也可以连上，或者不用管。<br><img src="https://img-blog.csdnimg.cn/20210115234750616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>10.现在系统的设置基本完成了，点开始安装<br><img src="https://img-blog.csdnimg.cn/20210115235526579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>11.设置root密码<br><img src="https://img-blog.csdnimg.cn/20210115235614547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dpbGl4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>12.等待完成，我的是3.0的U盘，大概几十分钟就完成了。<br>完成后关掉虚拟机，会弹出格式化U盘的提示，别管他，取消关掉，重启电脑，设置boot为U盘启动。这个根据你电脑来，一般是F2或delete键，不懂自行百度就不多说了。</p><h3 id="六、selinux参数值设置"><a href="#六、selinux参数值设置" class="headerlink" title="六、selinux参数值设置"></a>六、selinux参数值设置</h3><p>启动centOS7后可能卡在开机界面，这可能是selinux参数值不正确，可以参考<br><a href="https://blog.csdn.net/qq_42470947/article/details/109111080">启动 CentOS7 系统时卡在开机界面 7 解决办法</a></p><p>网络配置弄好后再写了，到时再把链接放上来。</p><p>————————————————</p><h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="https://blog.csdn.net/u013537471/article/details/106155473">centos7启动盘制作和安装(原系统为centos6.5)</a><br><a href="https://blog.csdn.net/chindax/article/details/45152393">通过VMWare将CentOS安装在U盘</a></p><p>每个步骤的相关介绍可以看这个<br><a href="https://blog.csdn.net/sinat_29384657/article/details/51152954">CentOS 7 安装教程、硬盘分区、LVM、网络配置、软件源配置、制作</a></p>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> linux </tag>
            
            <tag> u盘 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
